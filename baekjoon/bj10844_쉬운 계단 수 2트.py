
#   0 1 2 3 4 5 6 7 8 9
# 0 0 0 0 0 0 0 0 0 0 0
# 1 0 1 1 1 1 1 1 1 1 1
# 2 1 1 2 2 2 2 2 2 2 1
# 3 1 2 3 4 4 4 4 4 4 2

# dp 구조로 코딩
# 0은 1에서만 들어올 수 있음
# 1~8까진 양옆자리에서 들어올 수 있음 ex) 1<- 0,2 2<- 1,3 ...
# 9는 8에서만 들어올 수 있음

# 그로인해 코드는
# 0일땐 기존의 1의자리 도착수를 가져옴
# 1~8일땐 기존의 각 양옆의자리를 합침 ex) 1 <- 앞전의 0으로 도착수 + 2로 도착수
# 9일땐 기존의 8의자리 도착수를 가져옴


import sys

# 길이 n
n = int(sys.stdin.readline())

#각 자리 도착수 담을 리스트
dp = [[0]*10 for _ in range(n+1)]

# 나누는 숫자
divNum = 1_000_000_000

#한자리일때 도착수 담기 (0은 제외)
for i in range(1,10):
    dp[1][i] = 1

#그이상의 자리수일때 도착수 담기
for i in range(2,n+1):
    for j in range(10):
        if j == 0:
            dp[i][j] = dp[i-1][1]
        elif j == 9:
            dp[i][j] = dp[i-1][8]
        else:
            dp[i][j] = dp[i-1][j-1] + dp[i-1][j+1]

print(sum(dp[n])%divNum)